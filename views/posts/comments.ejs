<div class="my-5">
    <h1 class="text-center mb-3">당신의 말 한 마디가 무기가 될 수 있습니다.</h1>
    <div id="div_insert" style="display: none;">
    <textarea id="txt_body" class="form-control" rows="5"></textarea>
    <div class="text-end mt-2">
        <button id="btn-insert" class="btn btn-primary btn-sm px-5">당신의 댓글이 한 사람의 인생을 망칠수있습니다.</button>
        </div>
    </div>
    <div id="div_login">
     <button id="btn-login" class="btn btn-primary w-100">LogIn</button>
    </div>
    <div>
        <div>댓글수: <span id="total"></span></div>
    </div>
    <div id="div_comments"></div>
    <div id="pagination" class="pagination justify-content-center mt-5"></div>
</div>
<script id="temp_comments" type="x-handlebar-template">
    {{#each .}}
        <div>
            <div>
                <small><b>{{email}}</b></small>
                <small>{{date}}</small>
            </div>
            <div class="view{{id}}">
            <div class="ellipsis body">{{body}}</div>
            <div class="text-end mt-2" style="{{fn_display email}}">
                <button class="btn-update btn btn-success btn-sm" cid="{{id}}">수정</button>
                <button class="btn-delete btn btn-danger btn-sm" cid="{{id}}">삭제</button>
            </div>
          </div> 
          <div class="edit{{id}}" style="display:none;">
            <div><textarea class="form-control body" rows="5">{{body}}</textarea></div>
            <div class="text-end mt-2">
                <button class="btn-save btn btn-primary btn-sm" cid="{{id}}">저장</button>
                <button class="btn-cancel btn btn-secondary btn-sm" cid="{{id}}">취소</button>
            </div>
          </div> 
        </div>
        <hr>
    {{/each}}
</script>
<script>
    Handlebars.registerHelper("fn_ellipsis", function(){

    });
    Handlebars.registerHelper("fn_display", function(email){
        if(sessionStorage.getItem("email") != email){
            return "display:none;"
        }
    })
</script>
<script type="module">
    import { app } from "/javascripts/firebaseInit.js";
    import { getFirestore, collection, addDoc, deleteDoc } from "https://www.gstatic.com/firebasejs/10.4.0/firebase-firestore.js";
    import { query,orderBy,getDocs,where,doc, setDoc, getDoc} from "https://www.gstatic.com/firebasejs/10.4.0/firebase-firestore.js";
    const db = getFirestore(app);
    let total = 0;
    const size = 3;
    let page = 1;
    
    const pid = "<%=id%>";
    if(sessionStorage.getItem("email")){
        $("#div_insert, #div_login").toggle();
    }
    //댓글 내용을 클릭한 경우
    $("#div_comments").on("click", ".body", function(){
        $(this).toggleClass("ellipsis");
    });
    //저장버튼을 눌렀을 경우
    $("#div_comments").on("click", ".btn-save", async function(){
       const id = $(this).attr("cid");
       const edit = $(this).parent().parent();
       const body = edit.find(".body").val();
       if(confirm("수정하실래요?")){
        //수정 할 댓글읽기
        const comment = await getDoc(doc(db, `comments/${id}`));
        console.log(comment.data());
        setDoc(doc(db,`comments/${id}`),{
            ...comment.data(),
            body
            //body:body
        });
        alert("수정완료");
        getComments();
       }
    });


    //취소버튼을 눌렀을 경우
    $("#div_comments").on("click", ".btn-cancel", function(){
        const id = $(this).attr("cid");
        $("#div_comments .edit"+id).hide();
        $("#div_comments .view"+id).show();
    });


    //수정버튼을 눌렀을 경우
    $("#div_comments").on("click", ".btn-update", function(){
        const id = $(this).attr("cid");
        $("#div_comments .edit"+id).show();
        $("#div_comments .view"+id).hide();
    });

    //삭제버튼을 클릭한 경우
    $("#div_comments").on("click", ".btn-delete", async function(){
        const id = $(this).attr("cid");
        await deleteDoc(doc(db, `comments/${id}`));
        alert("삭완!");
        getComments();
    });

    $("#btn-login").on("click",function(){
        sessionStorage.setItem("target", "/posts/read?id="+pid); //target을 통해 입력값을 넣어서 있을경우 원하는 페이지로 보내줌
        location.href = "/users/login";
    });

    $("#btn-insert").on("click", async function(){
        const date=moment(new Date()).format("YYYY-MM-DD HH:mm:ss");
        const email = sessionStorage.getItem("email");
        const body = $("#txt_body").val();
        if(body==""){
            alert("댓글 좀 입력해 제발")
            $("#txt_body").focus();

        }else{
            //댓글저장
            const data = {pid, email, date, body}
            await addDoc(collection(db,"comments"), data);
            $("#txt_body").val("");
            alert("저장 했어잉");
            getComments();
        }
    });

    getComments();
    async function getComments(){
        const q = query(collection(db, 'comments'), where("pid","==",pid), orderBy("date","desc"));
        const snapshot = await getDocs(q);
        if(total != snapshot.docs.length){
            total = snapshot.docs.length;
            const totalPages = Math.ceil(total/size);
            $("#pagination").twbsPagination("changeTotalPages", totalPages, 1);
        }
        
        $("#total").html(total);
        
        let rows=[];
        snapshot.docs.forEach((row, index)=>{
            const start = (page-1) * size;
            const end=(page*size)-1;
            if(index>=start && index<=end){
                rows.push({id:row.id, ...row.data()})
            }
        });
        console.log(rows);
        const temp = Handlebars.compile($("#temp_comments").html());
        $("#div_comments").html(temp(rows));
    };
      $('#pagination').twbsPagination({

        totalPages:10, //총 페이지 번호 수
    
        visiblePages: 5, // 하단에서 한 번에 보여 지는 페이지 번호 수
    
        startPage : 1, // 시작 시 표시되는 현재 페이지
    
        initiateStartPageClick: false, // 플러그인이 시작 시 페이지 버튼 클릭 여부 (default : true) 
    
        first : '<<', // 페이지네이션 버튼 중 처음으로 돌아가는 버튼에 쓰여 있는 텍스트
    
        prev : '<', // 이전 페이지 버튼에 쓰여 있는 텍스트
    
        next : '>', // 다음 페이지 버튼에 쓰여 있는 텍스트
    
        last : '>>', // 페이지네이션 버튼 중 마지막으로 가는 버튼에 쓰여 있는 텍스트
    
        onPageClick: function (event, clickPage) {
    
             page=clickPage;
    
             getComments(); 
    
        }
    
    });
</script>